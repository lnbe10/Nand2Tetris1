// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:
    // Out to realimentation is called Diff
    // We got 4 possibilities to put on a Mux
    // with 2 selectors: load and inc

    Inc16(in = diff, out = o1);


    // The right operations for each combination of load, inc
    //li[0] = load;
    //li[1] = inc;
    //Mux4Way16(a = diff, b = diff, c = in, d = o1, sel = li, out = out1);
    //if reset = 1, out = 0
    //Mux16(a = out1, b = false, sel = reset, out = diff, out = out );
    


    Mux16(a = diff,  b = o1,    sel = inc,   out = diff1);
    Mux16(a = diff1, b = in,    sel = load,  out = l1   );
    Mux16(a = l1,    b = false, sel = reset, out = out2 );

    Register(in = out2, load = true, out = diff, out = out);







}
